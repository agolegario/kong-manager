version: '3.7'

services:

  kong-migrations:
    image: kong:latest
    command: kong migrations bootstrap
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: db_postgres
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: kong
      KONG_PG_DATABASE: kong
    depends_on:
      - db_postgres
    networks:
      - kong-net
    restart: "no"

  kong:
    image: kong:latest
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: db_postgres
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: kong
      KONG_PG_DATABASE: kong
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_ADMIN_LISTEN: 0.0.0.0:8001
      KONG_PROXY_LISTEN: 0.0.0.0:8000
      KONG_ADMIN_GUI_LISTEN: 0.0.0.0:8002
      KONG_PORTAL_GUI_HOST: localhost:8002
      KONG_PLUGINS: "bundled, sample-plugin, sample-plugin2"
      KONG_LUA_PACKAGE_PATH: /usr/local/custom_plugins/?.lua;;
    ports:
      - "8000:8000" # Proxy
      - "8001:8001" # Admin API
      - "8002:8002" # Kong Manager (Admin GUI)
    depends_on:
      - db_postgres
      - kong-migrations
    restart: on-failure
    networks:
      - kong-net
    volumes:
      - ./custom_plugins:/usr/local/custom_plugins

  db_postgres:
    image: postgres:latest
    environment:
      POSTGRES_DB: kong
      POSTGRES_USER: kong
      POSTGRES_PASSWORD: kong
      POSTGRES_HOST_AUTH_METHOD: trust
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "kong" ]
      interval: 5s
      timeout: 10s
      retries: 5
    networks:
      - kong-net
    ports:
      - "5432:5432"
    restart: on-failure
    volumes:
      - postgres_data:/var/lib/postgresql/data

networks:
  kong-net:
    driver: bridge

volumes:
  postgres_data:
    driver: local
